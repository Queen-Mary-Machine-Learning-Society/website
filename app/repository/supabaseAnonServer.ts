import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_PROJECT_URL!;
const serviceRoleKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;

export const supabaseAnon = createClient(supabaseUrl, serviceRoleKey);

/*
*   Supabase has two tables:
*   Auth.users (Auto generated by supabase for authentication, contains email, password)
*   Users (Custom table for additional user data, contains firstName, lastName)
* 
*/

type SignUpResult = {
    user?: object | null;
    error?: string | null;
  };

const HandleSignUp = async (email: string, password: string, firstname: string, lastname: string) => {

    //Sign up the user using the supabaseAnon client
    console.log("Signing up user" + email + " " + password + " " + firstname + " " + lastname);
    const { data, error } = await supabaseAnon.auth.signUp({
      email: email,
      password: password,
    });
  
    if (error) {
      console.error('Error signing up:', error.message);
      return { error: error.message };;
    } else {
        console.log('User signed up');
        window.location.href = "/login"; 
    }
    
    // Insert additional user data into the custom Users table
    const userId = data.user?.id;
    if (userId) {
        const { data, error } = await supabaseAnon.from('users').insert([{ id: userId, firstname: firstname, lastname: lastname }]);
        if(error) {
            console.error('Error inserting user:', error.message);
        }
      console.log('User signed up and additional info inserted');
      return { user: data };
    } else {
      console.error('No user ID returned');
      return { error: 'No user ID returned' };
    }
  };

  export default HandleSignUp;
  
